{"id":"xkit_main","script":"//* TITLE XKit Main **//\r\n//* VERSION 1.3.3 **//\r\n//* DESCRIPTION Boots XKit up **//\r\n//* DEVELOPER STUDIOXENIX **//\r\n(function(){\r\nif (typeof XKit.extensions.xkit_main !== \"undefined\") { return; }\r\nXKit.extensions.xkit_main = new Object({\r\n\r\n\trunning: false,\r\n\tenabled_extensions: \"\",\r\n\tdisabled_extensions: \"\",\r\n\tto_run: \"\",\r\n\tto_run_count: 0,\r\n\r\n\trun: function() {\r\n\r\n\t\tif (typeof document.location.href !== \"undefined\") {\r\n\r\n\t\t\tif (document.location.href.indexOf(\"www.tumblr.com/login\") !== -1 || document.location.href.indexOf(\"www.tumblr.com/settings\") !== -1) {\r\n\t\t\t\tconsole.log(\"Refusing to run XKit, login or settings page!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (XKit.extensions.xkit_main.running === true) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.running = true;\r\n\r\n\t\tXKit.console.add(\"Welcome from XKit Main \" + XKit.installed.version('xkit_main'));\r\n\r\n\t\t// Run XKit Patches first.\r\n\t\tif (XKit.flags.do_not_load_xkit_patches !== true) {\r\n\r\n\t\t\tvar m_result = XKit.extensions.xkit_main.run_extension(\"xkit_patches\", true, true);\r\n\t\t\tif (m_result === false) {\r\n\t\t\t\tXKit.console.add(\"Can not run xkit_patches! (version \" + XKit.installed.version('xkit_patches') +\")\");\r\n\t\t\t} else {\r\n\t\t\t\tXKit.console.add(\"Running xkit_patches (version \" + XKit.installed.version('xkit_patches') + \")\");\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tXKit.console.add(\"Skipping xkit_patches (flag on)\");\r\n\r\n\t\t}\r\n\r\n\t\t// Get currently running extensions.\r\n\t\tXKit.extensions.xkit_main.to_run = XKit.installed.list();\r\n\r\n\t\tif (XKit.extensions.xkit_main.should_slow_down() === true) {\r\n\t\t\tXKit.console.add(\"XKit Main: Slow-boot mode\");\r\n\t\t\t$(document).ready(function() {\r\n\t\t\t\tsetTimeout(function() { XKit.extensions.xkit_main.run_next_extension(); }, 300);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tXKit.console.add(\"XKit Main: Fast-boot mode\");\r\n\t\t\tsetTimeout(function() { XKit.extensions.xkit_main.run_next_extension(); }, 1);\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tshould_slow_down: function() {\r\n\r\n\t\tif (document.location.href.indexOf('://www.tumblr.com/new/') !== -1) { return true; }\r\n\r\n\t\tif (document.location.href.substring(0, 27) === \"://www.tumblr.com/blog/\") {\r\n\t\t\tif (document.location.href.indexOf('/new/') !== -1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\trun_next_extension: function() {\r\n\t\tXKit.extensions.xkit_main.to_run_count++;\r\n\t\tif (XKit.extensions.xkit_main.to_run_count < XKit.extensions.xkit_main.to_run.length) {\r\n\t\t\tXKit.extensions.xkit_main.run_extension(XKit.extensions.xkit_main.to_run[XKit.extensions.xkit_main.to_run_count]);\r\n\t\t} else {\r\n\t\t\tXKit.console.add(\"Enabled extensions: \" + XKit.extensions.xkit_main.enabled_extensions);\r\n\t\t\tXKit.console.add(\"Disabled extensions: \" + XKit.extensions.xkit_main.disabled_extensions);\r\n\t\t\tXKit.post_listener.check();\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tvar diff = new Date().getTime() - start;\r\n\t\t\t\tXKit.console.add(\"Booted XKit up in \" + diff + \" milliseconds.\");\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t},\r\n\r\n\trun_extension: function(extension_id, force, dont_run_next) {\r\n\r\n\t\t// We don't want an infinite loop now do we?\r\n\t\tif (extension_id === \"xkit_main\") { XKit.extensions.xkit_main.run_next_extension(); return; }\r\n\r\n\t\t// Just in case..\r\n\t\tif (extension_id === \"xkit_installer\" && force !== true) { XKit.extensions.xkit_main.run_next_extension(); return; }\r\n\r\n\t\t// We'll be running patches first.\r\n\t\tif (extension_id === \"xkit_patches\" && force !== true) { XKit.extensions.xkit_main.run_next_extension(); return; }\r\n\r\n\t\tvar xkit_main = XKit.installed.get(extension_id);\r\n\r\n\t\t// Check if in Frame Mode.\r\n\t\tif (XKit.frame_mode === true && extension_id !== \"xkit_patches\") {\r\n\t\t\t// This is ugly: I don't want to eval script.\r\n\t\t\t/* jshint evil: true */\r\n\t\t\teval(xkit_main.script + \"\\n//# sourceURL=xkit/\"+extension_id+\".js\");\r\n\t\t\tvar frame_script = \"\";\r\n\t\t\ttry {\r\n\t\t\t\tframe_script = XKit.extensions[extension_id].frame_run;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tXKit.console.add(\"No frame_run on \" + extension_id);\r\n\t\t\t}\r\n\t\t\tif (frame_script !== \"\" && typeof frame_script !== \"undefined\") {\r\n\t\t\t\t// This is a hybrid extension!\r\n\t\t\t\t// Run it!\r\n\t\t\t\tif (XKit.installed.enabled(extension_id) === true) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (typeof XKit.extensions[extension_id].preferences !== \"undefined\") {\r\n\t\t\t\t\t\t\tXKit.extensions.xkit_main.load_extension_preferences(extension_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tXKit.extensions[extension_id].frame_run();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tXKit.console.add(\"Can not run \" + extension_id + \": \" + e.message);\r\n\t\t\t\t\t\tXKit.extensions.xkit_main.run_next_extension(); return;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!dont_run_next) {\r\n\t\t\t\t\tXKit.extensions.xkit_main.run_next_extension();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (xkit_main.frame !== true) {\r\n\t\t\t\t// not a frame extension, quit.\r\n\t\t\t\tif (XKit.extensions.xkit_main.disabled_extensions === \"\") {\r\n\t\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = extension_id + \"(in frame)\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = XKit.extensions.xkit_main.disabled_extensions + \", \" + extension_id + \"(in frame)\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!dont_run_next) {\r\n\t\t\t\t\tXKit.extensions.xkit_main.run_next_extension();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (xkit_main.frame === true) {\r\n\t\t\t\t// is a frame extension, quit.\r\n\t\t\t\ttry {\r\n\t\t\t\t\teval(xkit_main.script + \"\\n//# sourceURL=xkit/\"+extension_id+\".js\");\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tXKit.console.add(\"Can't eval \" + extension_id);\r\n\t\t\t\t}\r\n\t\t\t\tif (XKit.extensions.xkit_main.disabled_extensions === \"\") {\r\n\t\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = extension_id + \"(not in frame)\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = XKit.extensions.xkit_main.disabled_extensions + \", \" + extension_id + \"(not in frame)\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!dont_run_next) {\r\n\t\t\t\t\tXKit.extensions.xkit_main.run_next_extension();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\teval(xkit_main.script + \"\\n//# sourceURL=xkit/\"+extension_id+\".js\");\r\n\t\t\tif (XKit.installed.enabled(extension_id) === true) {\r\n\t\t\t\tif (XKit.extensions.xkit_main.enabled_extensions === \"\") {\r\n\t\t\t\t\tXKit.extensions.xkit_main.enabled_extensions = extension_id;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tXKit.extensions.xkit_main.enabled_extensions = XKit.extensions.xkit_main.enabled_extensions + \", \" + extension_id;\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (typeof XKit.extensions[extension_id].preferences !== \"undefined\") {\r\n\r\n\t\t\t\t\t\tXKit.extensions.xkit_main.load_extension_preferences(extension_id);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tXKit.extensions[extension_id].run();\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tXKit.console.add(\"Can not run \" + extension_id + \": \" + e.message);\r\n\t\t\t\t\tXKit.extensions.xkit_main.run_next_extension(); return;\r\n\t\t\t\t}\r\n\t\t\t\tif (!dont_run_next) {\r\n\t\t\t\t\tXKit.extensions.xkit_main.run_next_extension();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tif (XKit.extensions.xkit_main.disabled_extensions === \"\") {\r\n\t\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = extension_id;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = XKit.extensions.xkit_main.disabled_extensions + \", \" + extension_id;\r\n\t\t\t\t}\r\n\t\t\t\tif (!dont_run_next) {\r\n\t\t\t\t\tXKit.extensions.xkit_main.run_next_extension();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tif (XKit.extensions.xkit_main.disabled_extensions === \"\") {\r\n\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = extension_id + \"(error)\";\r\n\t\t\t} else {\r\n\t\t\t\tXKit.extensions.xkit_main.disabled_extensions = XKit.extensions.xkit_main.disabled_extensions + \", \" + extension_id + \"(error)\";\r\n\t\t\t}\r\n\t\t\tshow_error_reset(\"Can't run \" + extension_id + \":\" + e.message);\r\n\t\t\tif (!dont_run_next) {\r\n\t\t\t\tXKit.extensions.xkit_main.run_next_extension();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tload_extension_preferences: function(extension_id) {\r\n\r\n\t\tfor(var pref in XKit.extensions[extension_id].preferences) {\r\n\r\n\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].type === \"undefined\" ||  XKit.extensions[extension_id].preferences[pref].type === \"\" || XKit.extensions[extension_id].preferences[pref].type === \"checkbox\") {\r\n\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.storage.get(extension_id, \"extension__setting__\" + pref, \"\");\r\n\t\t\t\tif ( XKit.extensions[extension_id].preferences[pref].value === \"\") {\r\n\t\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].default !== \"undefined\") {\r\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.extensions[extension_id].preferences[pref].default;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (XKit.extensions[extension_id].preferences[pref].value === \"true\") {\r\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (XKit.extensions[extension_id].preferences[pref].type === \"text\") {\r\n\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.storage.get(extension_id, \"extension__setting__\" + pref, \"\");\r\n\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].value === \"undefined\" || XKit.extensions[extension_id].preferences[pref].value === \"\") {\r\n\t\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].default !== \"undefined\") {\r\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.extensions[extension_id].preferences[pref].default;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (XKit.extensions[extension_id].preferences[pref].type === \"combo\") {\r\n\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.storage.get(extension_id, \"extension__setting__\" + pref, \"\");\r\n\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].value === \"undefined\" || XKit.extensions[extension_id].preferences[pref].value === \"\") {\r\n\t\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].default !== \"undefined\") {\r\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.extensions[extension_id].preferences[pref].default;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (XKit.extensions[extension_id].preferences[pref].type === \"blog\") {\r\n\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.storage.get(extension_id, \"extension__setting__\" + pref, \"\");\r\n\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].value === \"undefined\" || XKit.extensions[extension_id].preferences[pref].value === \"\") {\r\n\t\t\t\t\tif (typeof XKit.extensions[extension_id].preferences[pref].default !== \"undefined\") {\r\n\t\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.extensions[extension_id].preferences[pref].default;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tXKit.extensions[extension_id].preferences[pref].value = XKit.extensions[extension_id].preferences[pref].value.substring(1, XKit.extensions[extension_id].preferences[pref].value.length - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdestroy: function() {\r\n\t\tthis.running = false;\r\n\t}\r\n\r\n});\r\n}());\r\n","title":"XKit Main","description":"Boots XKit up","developer":"STUDIOXENIX","version":"1.3.3","file":"found","server":"up","errors":false,"frame":"false","beta":"false","slow":"false"}